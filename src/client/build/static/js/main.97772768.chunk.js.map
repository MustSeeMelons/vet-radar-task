{"version":3,"sources":["actions/itemActions.ts","components/footer/footer.tsx","util/history.ts","selectors/cartSelectors.ts","components/header/header.tsx","selectors/itemSelectors.ts","actions/globalActions.ts","reducers/globalReducer.ts","actions/cartActions.ts","util/localStorage.ts","store/store.ts","reducers/itemReducer.ts","reducers/cartReducer.ts","api/apiConfig.ts","api/api.ts","stateActions/stateActions.ts","components/itemList/itemList.tsx","components/cart/cart.tsx","components/progress/progress.tsx","components/errorInfo/errorInfo.tsx","root.tsx","serviceWorker.ts","index.tsx"],"names":["ItemActionTypes","useStyles","makeStyles","theme","createStyles","appBar","top","bottom","grid","marginTop","marginBottom","svg","display","flexDirection","justifyContent","marginLeft","Footer","classes","react_default","a","createElement","AppBar","position","className","Grid","container","justify","alignContent","Typography","variant","Icon","path","mdiCopyright","title","size","color","blue","A100","history","createBrowserHistory","isCartLoaded","state","_","isEmpty","cartReducer","cart","userId","isCartEmpty","itemQuantities","flexGrow","spacing","cursor","popover","popoverEmpty","margin","paper","padding","popCard","width","popCardContent","&:last-child","toHome","push","ConnectedHeader","connect","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","Toolbar","mdiDog","onClick","Button","aria-owns","undefined","aria-haspopup","event","currentTarget","Popover","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","direction","Fragment","Divider","item","map","itemQuantity","index","key","Card","CardContent","itemName","concat","price","quantity","Box","fontWeight","totalPrice","isItemsLoaded","itemReducer","items","GlobalActionTypes","setControlsActionCreator","value","arguments","length","type","SET_CONTROLS","payload","setErrActionCreator","err","SET_ERR","CartActionTypes","StorageVars","setCartActionCreator","SET_CART","itemInitialState","globalInitialState","lockControls","cartInitialState","store","createStore","combineReducers","action","SET","globalReducer","SET_USER_ID","_objectSpread","composeWithDevTools","applyMiddleware","CART_BASE_URL","ITEMS_BASE_URL","URLS","ITEM_LIST_URL","ITEM_ADD_URL","ITEM_DELETE_URL","CART_GET_URL","axiosConfig","timeout","itemApi","fetchItems","_fetchItems","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","Axios","get","sent","abrupt","data","stop","apply","this","cartApi","addToCart","_addToCart","_callee2","_context2","post","_x","_x2","removeFromCart","_removeFromCart","_callee3","_context3","_x3","_x4","getCart","_getCart","_callee4","_context4","_x5","UTILS","uuid","v4","stateActions","loadItems","_loadItems","listResponse","dispatch","t0","finish","handleSessionSetup","localStorage","getItem","USER_ID","setItem","setUserId","setUserIdActionCreator","addItemToCart","_addItemToCart","removeItemFromCaer","_removeItemFromCaer","card","ConnectedItemList","useEffect","_ref2","Container","isInCart","find","isItemInCart","CardHeader","CardActions","disabled","fullWidth","gridItem","cardHeader","cardContent","cardTexts","cardActions","cardButton","itemGrid","countField","emptyItem","paddingBottom","paddingTop","priceGrid","ConnectedCart","alignItems","overlay","height","backgroundColor","zIndex","Progress","CircularProgress","palette","error","light","textAlign","ErrorInfo","root","ConnectedRoot","_useState","_useState2","cartLoadLock","setCartLoadLock","maxWidth","progress_Progress","react_router","errorInfo_ErrorInfo","exact","component","ItemList","Cart","footer_Footer","window","location","hostname","match","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qGAEYA,+HCKNC,EAAYC,YAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,OAAQ,CACJC,IAAK,OACLC,OAAQ,GAEZC,KAAM,CACFC,UAAW,OACXC,aAAc,QAElBC,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAMlBC,EAAmB,WACrB,IAAMC,EAAUhB,IAEhB,OAAQiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWN,EAAQZ,QACjDa,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAWN,EAAQT,KAAMiB,WAAS,EAACC,QAAQ,SAASC,aAAa,UACnET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAGAX,EAAAC,EAAAC,cAAA,OAAKG,UAAWN,EAAQN,KACpBO,EAAAC,EAAAC,cAACU,EAAA,KAAD,CACIC,KAAMC,IAAcC,MAAM,aAC1BC,KAAM,EACNC,MAAOC,IAAKC,kFCrC1BC,EAAUC,uCCCHC,EAAe,SAACC,GACzB,OAAQC,IAAEC,QAAQF,EAAMG,YAAYC,KAAKC,SAGhCC,EAAc,SAACN,GACxB,OAAIA,EAAMG,YAAYC,MACXH,IAAEC,QAAQF,EAAMG,YAAYC,KAAKG,iBCG1C/C,EAAYC,YAAW,SAACC,GAAD,OACzBC,YAAa,CACT6B,MAAO,CACHgB,SAAU,EACVlC,WAAYZ,EAAM+C,QAAQ,GAC1BC,OAAQ,WAEZC,QAAS,GAGTC,aAAc,CACVC,OAAQ,GAEZC,MAAO,CACHC,QAASrD,EAAM+C,QAAQ,IAE3BO,QAAS,CACLD,QAAS,EACTE,MAAO,KAEXC,eAAgB,CACZH,QAAS,EACTI,eAAgB,CACZJ,QAAS,QAMnBK,EAAS,WACXvB,EAAQwB,KAAK,MAgIXC,EAAkBC,YAPA,SAACvB,GACrB,MAAO,CACHI,KAAMJ,EAAMG,YAAYC,KACxBE,YAAaA,EAAYN,KAITuB,CAxHc,SAACC,GACnC,IAAMhD,EAAUhB,IAD6BiE,EAGbC,IAAMC,SAA6B,MAHtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGtCM,EAHsCH,EAAA,GAG5BI,EAH4BJ,EAAA,GASvCK,EAAqB,WACvBD,EAAY,OAQVE,EAAOC,QAAQJ,GAErB,OAAQtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAS,UACrBJ,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACI3D,EAAAC,EAAAC,cAACU,EAAA,KAAD,CACIC,KAAM+C,IAAQ7C,MAAM,WACpBC,KAAM,EACNC,MAAOC,IAAKC,OAEhBnB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWN,EAAQgB,MAAO8C,QAASlB,GAA5D,YAGA3C,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACIC,YAAWN,EAAO,0BAAuBO,EACzCC,gBAAc,OACdJ,QA5Bc,SAACK,GACvBX,EAAYW,EAAMC,gBA4BVlD,MAAM,WAJV,WAKAjB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACIC,GAAG,qBACHhE,UAAWN,EAAQmC,QACnBnC,QAAS,CACLsC,MAAOtC,EAAQsC,OAEnBoB,KAAMA,EACNH,SAAUA,EACVgB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,QAASlB,EACTmB,qBAAmB,GAEnB3E,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACyB,QAAS,EAAG4C,UAAU,WAChC7B,EAAMlB,aACJ7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,KACI7E,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQD,QA5CjB,WACXL,IACApC,EAAQwB,KAAK,WA0CO,WACA5C,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,OAGP/B,EAAMlB,YACH7B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAAC1E,UAAWN,EAAQoC,cAC1BnC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,aAApB,8BAIJoC,EAAMpB,KAAKG,eAAekD,IAAI,SAACC,EAAiCC,GAChE,OACIlF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAACI,IAAKD,GACZlF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAM/E,UAAWN,EAAQwC,SACrBvC,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAahF,UAAWN,EAAQ0C,gBAC5BzC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,SACfsE,EAAaF,KAAKO,UAEvBtF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACpBR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,aAApB,GAAA4E,OACQN,EAAaF,KAAKS,MAD1B,MAGAxF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,aAApB,GAAA4E,OACQN,EAAaQ,SADrB,gBAStB1C,EAAMlB,aACJ7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,KACI7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,MACA9E,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAACI,KAAM,GACbnF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACpBR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,aAChBX,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAKC,WAAY,KAAjB,WAIJ3F,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,aAChBX,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAKC,WAAY,KAAjB,GAAAJ,OACQxC,EAAMpB,KAAKiE,WADnB,4EC/I3BC,EAAgB,SAACtE,GAC1B,OAAQC,IAAEC,QAAQF,EAAMuE,YAAYC,0BLL5BjH,2BAeL,IMjBKkH,mHAYL,IAgBMC,EAA2B,WAA0C,IAAzCC,EAAyCC,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,IAAAA,UAAA,GAC9E,MAAO,CACHE,KAAML,EAAkBM,aACxBC,QAAS,CACLL,WAYCM,EAAsB,WAAmC,IAAlCC,EAAkCN,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,IAAAA,UAAA,GAClE,MAAO,CACHE,KAAML,EAAkBU,QACxBH,QAAS,CACLE,4jBC5CL,ICFKE,iDAML,ICNKC,EDMCC,GAAuB,SAAClF,GACjC,MAAO,CACH0E,KAAMM,EAAgBG,SACtBP,QAAS,CACL5E,mBEkBCoF,GAA8B,CACvChB,MAAO,IAGEiB,GAAkC,CAC3CpF,OAAQ,GACRqF,cAAc,EACdR,KAAK,GAGIS,GAA8B,CACvCvF,KAAM,CAAEC,OAAQ,GAAIE,eAAgB,KAI3BqF,GAAQC,sBACjBC,0BAAgB,CACZvB,YC3CmB,WAAyD,IAAxDvE,EAAwD4E,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,GAAAA,UAAA,GAArCY,GAAkBO,EAAmBnB,UAAAC,OAAA,EAAAD,UAAA,QAAAnC,EAChF,OAAQsD,EAAOjB,MACX,KAAKvH,EAAgByI,IACjB,MAAO,CACHxB,MAAOuB,EAAOf,QAAQR,OAE9B,QACI,OAAOxE,IDqCXiG,cH5CqB,WAA6D,IAA5DjG,EAA4D4E,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,GAAAA,UAAA,GAAvCa,GAAoBM,EAAmBnB,UAAAC,OAAA,EAAAD,UAAA,QAAAnC,EACtF,OAAQsD,EAAOjB,MACX,KAAKL,EAAkByB,YACnB,OAAAC,EAAA,GACOnG,EADP,CAEIK,OAAQ0F,EAAOf,QAAQ3E,SAE/B,KAAKoE,EAAkBM,aACnB,OAAI/E,EAAM0F,eAAiBK,EAAOf,QAAQL,MACtCwB,EAAA,GACOnG,EADP,CAEI0F,aAAcK,EAAOf,QAAQL,QAG9B3E,EACX,KAAKyE,EAAkBU,QACnB,OAAInF,EAAMkF,MAAQa,EAAOf,QAAQE,IAC7BiB,EAAA,GACOnG,EADP,CAEIkF,IAAKa,EAAOf,QAAQE,MAGrBlF,EAEX,QACI,OAAOA,IGoBXG,YE7CmB,WAAyD,IAAxDH,EAAwD4E,UAAAC,OAAA,QAAApC,IAAAmC,UAAA,GAAAA,UAAA,GAArCe,GAAkBI,EAAmBnB,UAAAC,OAAA,EAAAD,UAAA,QAAAnC,EAChF,OAAQsD,EAAOjB,MACX,KAAKM,EAAgBG,SACjB,MAAO,CACHnF,KAAM2F,EAAOf,QAAQ5E,MAE7B,QACI,OAAOJ,MFwCfoG,+BACIC,kDGnDFC,GAAa,GAAAtC,OADG,wBACH,UACbuC,GAAc,GAAAvC,OAFE,wBAEF,UAEPwC,GAAO,CAChBC,cAAa,GAAAzC,OAAKuC,GAAL,SACbG,aAAY,GAAA1C,OAAKsC,GAAL,QACZK,gBAAe,GAAA3C,OAAKsC,GAAL,WACfM,aAAY,GAAA5C,OAAKsC,GAAL,SCFVO,GAAkC,CACpCC,QAAS,KAKAC,GAAU,CACnBC,WAAU,eAAAC,EAAApF,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeC,KAAMC,IAAIpB,GAAKC,cAAeI,IAD7C,cACFS,EADEE,EAAAK,KAAAL,EAAAM,OAAA,SAGDR,EAASS,MAHR,wBAAAP,EAAAQ,SAAAX,MAAF,yBAAAJ,EAAAgB,MAAAC,KAAAtD,YAAA,IAODuD,GAAU,CACnBC,UAAS,eAAAC,EAAAxG,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAkB,EAAOjI,EAAgBmD,GAAvB,IAAA8D,EAAA,OAAAH,EAAAzI,EAAA6I,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACgBC,KAAMa,KAAKhC,GAAKE,aAAc,CACjDrG,SACAmD,QACDqD,IAJI,cACDS,EADCiB,EAAAV,KAAAU,EAAAT,OAAA,SAMAR,EAASS,MANT,wBAAAQ,EAAAP,SAAAM,MAAF,gBAAAG,EAAAC,GAAA,OAAAL,EAAAJ,MAAAC,KAAAtD,YAAA,GAQT+D,eAAc,eAAAC,EAAA/G,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAyB,EAAOxI,EAAgBmD,GAAvB,IAAA8D,EAAA,OAAAH,EAAAzI,EAAA6I,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACWC,KAAMa,KAAKhC,GAAKG,gBAAiB,CACpDtG,SACA0D,SAAUP,EAAKO,UAChB8C,IAJS,cACNS,EADMwB,EAAAjB,KAAAiB,EAAAhB,OAAA,SAMLR,EAASS,MANJ,wBAAAe,EAAAd,SAAAa,MAAF,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAX,MAAAC,KAAAtD,YAAA,GAQdqE,QAAO,eAAAC,EAAArH,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAA+B,EAAO9I,GAAP,IAAAiH,EAAA,OAAAH,EAAAzI,EAAA6I,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACkBC,KAAMa,KAAKhC,GAAKI,aAAc,CACjDvG,UACDwG,IAHE,cACCS,EADD8B,EAAAvB,KAAAuB,EAAAtB,OAAA,SAKER,EAASS,MALX,wBAAAqB,EAAApB,SAAAmB,MAAF,gBAAAE,GAAA,OAAAH,EAAAjB,MAAAC,KAAAtD,YAAA,kCLnCCS,mCAIL,IAAMiE,GACO,WACZ,OAAOC,KAAKC,MMKdC,GAAe,CACjBC,UAAS,eAAAC,EAAA9H,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAC,IAAA,IAAAuC,EAAA,OAAAzC,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEH7B,GAAMiE,SAASnF,GAAyB,IAFrC8C,EAAAE,KAAA,EAG6BX,GAAQC,aAHrC,OAGG4C,EAHHpC,EAAAK,KAIHjC,GAAMiE,UfDoBrF,EeCWoF,EAAapF,MfAnD,CACHM,KAAMvH,EAAgByI,IACtBhB,QAAS,CACLR,YeFAoB,GAAMiE,SAAS5E,KALZuC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAOH5B,GAAMiE,SAAS5E,GAAoB,IAPhC,eAAAuC,EAAAC,KAAA,GASH7B,GAAMiE,SAASnF,KATZ8C,EAAAuC,OAAA,6BAAAvC,EAAAQ,OfGsB,IAACxD,GeHvB6C,EAAA,uBAAF,yBAAAsC,EAAA1B,MAAAC,KAAAtD,YAAA,GAaToF,mBAAoB,WAChB,IAAI3J,ENXD4J,aAAaC,QAAQ7E,EAAY8E,SMY/B9J,GNjBY,SAACA,GACtB4J,aAAaG,QAAQ/E,EAAY8E,QAAS9J,GMkBlCgK,CADAhK,EAASiJ,MAIb1D,GAAMiE,STtBwB,SAACxJ,GACnC,MAAO,CACHyE,KAAML,EAAkByB,YACxBlB,QAAS,CACL3E,WSkBWiK,CAAuBjK,KAE1C4I,QAAO,eAAAC,EAAArH,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAkB,EAAOjI,GAAP,IAAAD,EAAA,OAAA+G,EAAAzI,EAAA6I,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAd,KAAA,EAED7B,GAAMiE,SAASnF,GAAyB,IAFvC6D,EAAAb,KAAA,EAGkBS,GAAQc,QAAQ5I,GAHlC,QAGKD,EAHLmI,EAAAV,OAKGjC,GAAMiE,SAASvE,GAAqBlF,IAExCwF,GAAMiE,SAAS5E,KAPdsD,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAAuB,GAAAvB,EAAA,SASD3C,GAAMiE,SAAS5E,GAAoB,IATlC,eAAAsD,EAAAd,KAAA,GAWD7B,GAAMiE,SAASnF,KAXd6D,EAAAwB,OAAA,6BAAAxB,EAAAP,SAAAM,EAAA,uBAAF,gBAAAG,GAAA,OAAAS,EAAAjB,MAAAC,KAAAtD,YAAA,GAeP2F,cAAa,eAAAC,EAAA3I,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAyB,EAAOxI,EAAgBmD,GAAvB,OAAA2D,EAAAzI,EAAA6I,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAArB,KAAA,EAEP7B,GAAMiE,SAASnF,GAAyB,IAFjCoE,EAAApB,KAAA,EAGDS,GAAQC,UAAU/H,EAAQmD,GAHzB,OAIPoC,GAAMiE,SAAS5E,KAJR6D,EAAApB,KAAA,gBAAAoB,EAAArB,KAAA,EAAAqB,EAAAgB,GAAAhB,EAAA,SAMPlD,GAAMiE,SAAS5E,GAAoB,IAN5B,eAAA6D,EAAArB,KAAA,GAQP7B,GAAMiE,SAASnF,KARRoE,EAAAiB,OAAA,6BAAAjB,EAAAd,SAAAa,EAAA,uBAAF,gBAAAH,EAAAK,GAAA,OAAAyB,EAAAvC,MAAAC,KAAAtD,YAAA,GAWb6F,mBAAkB,eAAAC,EAAA7I,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAA+B,EAAO9I,EAAgBmD,GAAvB,OAAA2D,EAAAzI,EAAA6I,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA3B,KAAA,EAEZ7B,GAAMiE,SAASnF,GAAyB,IAF5B0E,EAAA1B,KAAA,EAGNS,GAAQQ,eAAetI,EAAQmD,GAHzB,OAIZoC,GAAMiE,SAAS5E,KAJHmE,EAAA1B,KAAA,gBAAA0B,EAAA3B,KAAA,EAAA2B,EAAAU,GAAAV,EAAA,SAMZxD,GAAMiE,SAAS5E,GAAoB,IANvB,eAAAmE,EAAA3B,KAAA,GAQZ7B,GAAMiE,SAASnF,KARH0E,EAAAW,OAAA,6BAAAX,EAAApB,SAAAmB,EAAA,uBAAF,gBAAAH,EAAAK,GAAA,OAAAqB,EAAAzC,MAAAC,KAAAtD,YAAA,wBCnDhBpH,GAAYC,aAAW,SAACC,GAAD,OACzBC,aAAa,CACTgN,KAAM,CACF1J,MAAO,KAEXjC,UAAW,CACPhB,UAAW,QAyEjB4M,GAAoBrJ,YAVF,SAACvB,GACrB,MAAO,CACHwE,MAAOxE,EAAMuE,YAAYC,MACzBF,cAAeA,EAActE,GAC7BK,OAAQL,EAAMiG,cAAc5F,OAC5BD,KAAMJ,EAAMG,YAAYC,KACxBsF,aAAc1F,EAAMiG,cAAcP,eAIhBnE,CA5DgB,SAACC,GACvC,IAAMhD,EAAUhB,KAGhBqN,oBAAU,WACNhJ,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAC,SAAAC,IAAA,OAAAF,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACS+B,GAAaC,YADtB,wBAAAlC,EAAAQ,SAAAX,KAADxF,IAGD,IAGH,IAAMuG,EAAS,eAAA0C,EAAAjJ,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAG,SAAAkB,EAAO9E,GAAP,OAAA2D,EAAAzI,EAAA6I,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACR+B,GAAac,cAAc/I,EAAMnB,OAAQmD,GADjC,cAAA+E,EAAAb,KAAA,EAER+B,GAAaR,QAAQzH,EAAMnB,QAFnB,wBAAAkI,EAAAP,SAAAM,MAAH,gBAAAG,GAAA,OAAAqC,EAAA7C,MAAAC,KAAAtD,YAAA,GASf,OACInG,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAWjM,UAAWN,EAAQQ,WAC1BP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACyB,QAAS,EAAGxB,QAAQ,gBAC/BuC,EAAM8C,eAAiB9C,EAAMgD,MAAMf,IAAI,SAACD,EAAaG,GAClD,IAAMqH,EX5CE,SAACxH,EAAapD,GACtC,QAAIA,KACSA,EAAKG,eAAe0K,KAAK,SAAC1K,GAC/B,OAAOA,EAAeiD,KAAKO,WAAaP,EAAKO,WWyCpBmH,CAAa1H,EAAMhC,EAAMpB,MAE1C,OACI3B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAACI,IAAKD,GACZlF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAM/E,UAAWN,EAAQmM,MACrBlM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CAAY3L,MAAOgE,EAAKO,WAExBtF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACIrF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYO,MAAM,aAAlB,GAAAsE,OACQR,EAAKS,MADb,QAIJxF,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACI3M,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQ8I,SAAU7J,EAAMkE,aAActG,QAAQ,YAAYM,MAAOsL,EAAW,UAAY,YAAaM,WAAS,EAAChJ,QAAS,WAAQ0I,EApB5JnL,EAAQwB,KAAK,SAoBqK+G,EAAU5E,KAC3JwH,EAAW,UAAY,gBC3D1DxN,GAAYC,aAAW,SAACC,GAAD,OACzBC,aAAa,CACT4N,SAAU,CACNtK,MAAO,OAEXuK,WAAY,CACRzK,QAAS,EACTzC,WAAY,IAEhBmN,YAAa,CACT1K,QAAS,EACTF,OAAQ,GACRM,eAAgB,CACZJ,QAAS,IAGjB2K,UAAW,CACPzK,MAAO,KAEX0K,YAAa,GAGbC,WAAY,CACR/K,OAAQ,GAEZgL,SAAU,CACNhL,OAAQ,EACRI,MAAO,QAEX6K,WAAY,CACR7K,MAAO,IAEX8K,UAAW,CACPC,cAAe,GACfC,WAAY,IAEhBC,UAAW,CACPnL,QAAS,QA4EfoL,GAAgB5K,YATE,SAACvB,GACrB,MAAO,CACHI,KAAMJ,EAAMG,YAAYC,KACxBE,YAAaA,EAAYN,GACzBK,OAAQL,EAAMiG,cAAc5F,OAC5BqF,aAAc1F,EAAMiG,cAAcP,eAIpBnE,CAhEY,SAACC,GAC/B,IAAMhD,EAAUhB,KAEhB,OACIiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,KACK9B,EAAMlB,aACH7B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAAC1E,UAAWN,EAAQuN,WAC1BtN,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBAKRX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAM+D,GAAG,WAAW9D,WAAS,EAACyB,QAAS,EAAG3B,UAAWN,EAAQqN,WACvDrK,EAAMlB,aAAekB,EAAMpB,KAAKG,eAAekD,IAAI,SAACC,EAAiCC,GACnF,OACIlF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAACI,IAAKD,EAAO7E,UAAWN,EAAQ+M,UACtC9M,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACIpF,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CAAY3L,MAAOkE,EAAaF,KAAKO,SAAUjF,UAAWN,EAAQgN,aAClE/M,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,MACA9E,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAahF,UAAWN,EAAQiN,aAC5BhN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBmN,WAAW,UAC/C3N,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAAC1E,UAAWN,EAAQkN,WAC1BjN,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,GAAA4E,OACQN,EAAaF,KAAKS,MAD1B,QAAAD,OACsCN,EAAaQ,SADnD,UAIJzF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAAC1E,UAAWN,EAAQmN,aAC1BlN,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQzD,UAAWN,EAAQoN,WAAYP,SAAU7J,EAAMkE,aAActG,QAAQ,WAAWM,MAAM,UAAU4C,QAAOT,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAC,IAAA,OAAAF,EAAAzI,EAAA6I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvG+B,GAAac,cAAc/I,EAAMnB,OAAQqD,EAAaF,MADiD,cAAAgE,EAAAE,KAAA,EAEvG+B,GAAaR,QAAQzH,EAAMnB,QAF4E,wBAAAmH,EAAAQ,SAAAX,OAAjH,OAIA5I,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQzD,UAAWN,EAAQoN,WAAYP,SAAU7J,EAAMkE,aAActG,QAAQ,WAAWM,MAAM,YAAY4C,QAAOT,OAAAqF,EAAA,EAAArF,CAAAsF,EAAAzI,EAAA0I,KAAE,SAAAkB,IAAA,OAAAnB,EAAAzI,EAAA6I,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACzG+B,GAAagB,mBAAmBjJ,EAAMnB,OAAQqD,EAAaF,MAD8C,cAAA+E,EAAAb,KAAA,EAEzG+B,GAAaR,QAAQzH,EAAMnB,QAF8E,wBAAAkI,EAAAP,SAAAM,OAAnH,kBAYhC7J,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,MACA9E,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACoN,WAAW,WAAWnN,QAAQ,SAASH,UAAWN,EAAQ0N,WACtEzN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,GACN/E,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAKC,WAAY,KAAjB,UAAAJ,OACexC,EAAMpB,KAAKiE,YAAc,OADxC,qBCpGd7G,GAAYC,YAAW,SAACC,GAAD,OACzBC,YAAa,CACT0O,QAAS,CACLxN,SAAU,QACVV,QAAS,OACTE,eAAgB,SAChB+N,WAAY,SACZnL,MAAO,OACPqL,OAAQ,OACRC,gBAAe,qBACfC,OAAQ,SAKdC,GAAqB,WACvB,IAAMjO,EAAUhB,KAEhB,OAAOiB,EAAAC,EAAAC,cAAA,OAAKG,UAAWN,EAAQ6N,SAC3B5N,EAAAC,EAAAC,cAAC+N,GAAA,EAAD,QCnBFlP,GAAYC,YAAW,SAACC,GAAD,OACzBC,YAAa,CACTqB,UAAW,CACPiC,MAAO,OACPsL,gBAAiB7O,EAAMiP,QAAQC,MAAMC,MACrCC,UAAW,cAKVC,GAAsB,WAC/B,IAAMvO,EAAUhB,KAEhB,OACIiB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACE,aAAa,SAASD,QAAQ,UAC1CR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMyE,MAAI,EAAC1E,UAAWN,EAAQQ,WAC1BP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKM,MAAM,iBAA/B,2ECJVlC,GAAYC,YAAW,SAACC,GAAD,OACzBC,YAAa,CACTqP,KAAM,CACF7O,QAAS,OACTC,cAAe,SACfkO,OAAQ,OACRrL,MAAO,OACPT,SAAU,EACVO,QAAS,EACTF,OAAQ,GAEZ7B,UAAW,CACPwB,SAAU,EACVO,QAAS,OA0DNkM,GAFO1L,YATE,SAACvB,GACrB,MAAO,CACHK,OAAQL,EAAMiG,cAAc5F,OAC5BN,aAAcA,EAAaC,GAC3B0F,aAAc1F,EAAMiG,cAAcP,aAClCR,IAAKlF,EAAMiG,cAAcf,MAIX3D,CA5CY,SAACC,GAAU,IAAA0L,EACDvL,oBAAS,GADRwL,EAAAtL,OAAAC,EAAA,EAAAD,CAAAqL,EAAA,GAClCE,EADkCD,EAAA,GACpBE,EADoBF,EAAA,GAGnC3O,EAAUhB,KAgBhB,OAbAqN,oBAAU,WACNpB,GAAaO,sBAEd,IAGHa,oBAAU,YACFrJ,EAAMnB,QAAWmB,EAAMzB,cAAiBqN,IACxCC,GAAgB,GAChB5D,GAAaR,QAAQzH,EAAMnB,UAEhC,CAACmB,EAAMnB,OAAQmB,EAAMzB,aAAcqN,IAGlC3O,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAWjI,GAAG,gBAAgBhE,UAAWN,EAAQwO,KAAMM,UAAU,GAC5D9L,EAAMkE,cAAgBjH,EAAAC,EAAAC,cAAC4O,GAAD,MACvB9O,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAAQ3N,QAASA,GACbpB,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAWjI,GAAG,UAAUhE,UAAWN,EAAQQ,WACtCwC,EAAM0D,KAAOzG,EAAAC,EAAAC,cAAC8O,GAAD,MACdhP,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAAOlO,KAAK,IAAIoO,OAAK,EAACC,UAAWC,KACjCnP,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAAOlO,KAAK,QAAQqO,UAAWE,MAEnCpP,EAAAC,EAAAC,cAACmP,EAAD,UC1DI3L,QACW,cAA7B4L,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACL3P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAUzI,MAAOA,IACbnH,EAAAC,EAAAC,cAACqO,GAAD,OAEJsB,SAASC,eAAe,SD4HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.97772768.chunk.js","sourcesContent":["import { IItem } from \"../../../_models/item\";\r\n\r\nexport enum ItemActionTypes {\r\n    SET = \"SET\"\r\n}\r\n\r\n/**\r\n * @description Item set action interface\r\n * @export\r\n * @interface ISetItems\r\n */\r\nexport interface ISetItems { type: ItemActionTypes.SET, payload: { items: IItem[] } }\r\n\r\n/**\r\n * @description Returns an item set action\r\n * @param items \r\n */\r\nexport const setItemsActionCreator = (items: IItem[]): ISetItems => {\r\n    return {\r\n        type: ItemActionTypes.SET,\r\n        payload: {\r\n            items\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { AppBar, Grid, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { Icon } from \"@mdi/react\";\r\nimport { mdiCopyright } from '@mdi/js'\r\nimport blue from '@material-ui/core/colors/lightBlue';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            top: \"auto\",\r\n            bottom: 0,\r\n        },\r\n        grid: {\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\"\r\n        },\r\n        svg: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"5px\"\r\n        }\r\n    }),\r\n);\r\n\r\n\r\nconst Footer: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (<AppBar position=\"static\" className={classes.appBar}>\r\n        <Grid className={classes.grid} container justify=\"center\" alignContent=\"center\">\r\n            <Typography variant=\"h6\">\r\n                Less is more\r\n            </Typography>\r\n            <div className={classes.svg}>\r\n                <Icon\r\n                    path={mdiCopyright} title=\"Beefy Icon\"\r\n                    size={1}\r\n                    color={blue.A100}\r\n                />\r\n            </div>\r\n\r\n        </Grid>\r\n    </AppBar>);\r\n}\r\n\r\nexport { Footer }","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport { history }","import _ from \"lodash\";\r\nimport { State } from \"../store/store\";\r\n\r\nexport const isCartLoaded = (state: State) => {\r\n    return !_.isEmpty(state.cartReducer.cart.userId);\r\n}\r\n\r\nexport const isCartEmpty = (state: State) => {\r\n    if (state.cartReducer.cart) {\r\n        return _.isEmpty(state.cartReducer.cart.itemQuantities);\r\n    }\r\n    return true;\r\n}","import React from \"react\";\r\nimport { AppBar, Toolbar, Button, Typography, Popover, Grid, CardContent, Card, Box, Divider } from \"@material-ui/core\";\r\nimport { Icon } from \"@mdi/react\";\r\nimport { mdiDog } from '@mdi/js'\r\nimport blue from '@material-ui/core/colors/lightBlue';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { history } from \"../../util/history\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../../store/store\";\r\nimport { isCartEmpty } from \"../../selectors/cartSelectors\";\r\nimport { ICart, ICartItemQuantity } from \"../../../../_models/cart\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        title: {\r\n            flexGrow: 1,\r\n            marginLeft: theme.spacing(2),\r\n            cursor: \"pointer\"\r\n        },\r\n        popover: {\r\n            // pointerEvents: 'none',\r\n        },\r\n        popoverEmpty: {\r\n            margin: 5\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(1),\r\n        },\r\n        popCard: {\r\n            padding: 1,\r\n            width: 130\r\n        },\r\n        popCardContent: {\r\n            padding: 3,\r\n            \"&:last-child\": {\r\n                padding: 3\r\n            }\r\n        }\r\n    }),\r\n);\r\n\r\nconst toHome = () => {\r\n    history.push(\"/\");\r\n}\r\n\r\nexport interface HeaderProps {\r\n    cart: ICart,\r\n    isCartEmpty: boolean\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n\r\n    const handlePopoverOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const handlePopoverClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const toCart = () => {\r\n        handlePopoverClose();\r\n        history.push(\"/cart\");\r\n    }\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (<AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Icon\r\n                path={mdiDog} title=\"Vet Icon\"\r\n                size={3}\r\n                color={blue.A100}\r\n            />\r\n            <Typography variant=\"h4\" className={classes.title} onClick={toHome}>\r\n                VetRadar\r\n            </Typography>\r\n            <Button\r\n                aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handlePopoverOpen}\r\n                color=\"inherit\">My Cart</Button>\r\n            <Popover\r\n                id=\"mouse-over-popover\"\r\n                className={classes.popover}\r\n                classes={{\r\n                    paper: classes.paper,\r\n                }}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                onClose={handlePopoverClose}\r\n                disableRestoreFocus\r\n            >\r\n                <Grid container spacing={2} direction=\"column\">\r\n                    {!props.isCartEmpty &&\r\n                        <>\r\n                            <Button onClick={toCart}>To Cart</Button>\r\n                            <Divider />\r\n                        </>\r\n                    }\r\n                    {props.isCartEmpty ? (\r\n                        <Grid item className={classes.popoverEmpty}>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Mate, your cart is empty.\r\n                            </Typography>\r\n                        </Grid>\r\n                    ) : props.cart.itemQuantities.map((itemQuantity: ICartItemQuantity, index: number) => {\r\n                        return (\r\n                            <Grid item key={index}>\r\n                                <Card className={classes.popCard}>\r\n                                    <CardContent className={classes.popCardContent}>\r\n                                        <Typography variant=\"body2\" >\r\n                                            {itemQuantity.item.itemName}\r\n                                        </Typography>\r\n                                        <Grid container justify=\"space-between\">\r\n                                            <Typography variant=\"subtitle2\">\r\n                                                {`${itemQuantity.item.price}$`}\r\n                                            </Typography>\r\n                                            <Typography variant=\"subtitle2\">\r\n                                                {`${itemQuantity.quantity} pcs`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                    {!props.isCartEmpty &&\r\n                        <>\r\n                            <Divider />\r\n                            <Grid item key={-1}>\r\n                                <Grid container justify=\"space-between\">\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        <Box fontWeight={600}>\r\n                                            Total:\r\n                                        </Box>\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        <Box fontWeight={600}>\r\n                                            {`${props.cart.totalPrice}$`}\r\n                                        </Box>\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n            </Popover>\r\n        </Toolbar>\r\n    </AppBar>);\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        cart: state.cartReducer.cart,\r\n        isCartEmpty: isCartEmpty(state)\r\n    }\r\n}\r\n\r\nconst ConnectedHeader = connect(mapStateToProps)(Header);\r\n\r\nexport { ConnectedHeader as Header }","import _ from \"lodash\";\r\nimport { State } from \"../store/store\";\r\nimport { IItem } from \"../../../_models/item\";\r\nimport { ICart, ICartItemQuantity } from \"../../../_models/cart\";\r\n\r\n// FIXME: use reselect?\r\nexport const isItemsLoaded = (state: State) => {\r\n    return !_.isEmpty(state.itemReducer.items)\r\n}\r\n\r\nexport const isItemInCart = (item: IItem, cart?: ICart) => {\r\n    if (cart) {\r\n        return !!cart.itemQuantities.find((itemQuantities: ICartItemQuantity) => {\r\n            return itemQuantities.item.itemName === item.itemName;\r\n        })\r\n    }\r\n\r\n    return false;\r\n}","export enum GlobalActionTypes {\r\n    SET_USER_ID = \"SET_USER_ID\",\r\n    SET_CONTROLS = \"TOGGLE_CONTROLS\",\r\n    SET_ERR = \"SET_ERR\"\r\n}\r\n\r\nexport interface ISetUserId {\r\n    type: GlobalActionTypes.SET_USER_ID, payload: {\r\n        userId: string\r\n    }\r\n}\r\n\r\nexport const setUserIdActionCreator = (userId: string): ISetUserId => {\r\n    return {\r\n        type: GlobalActionTypes.SET_USER_ID,\r\n        payload: {\r\n            userId\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ISetControls {\r\n    type: GlobalActionTypes.SET_CONTROLS,\r\n    payload: {\r\n        value: boolean\r\n    }\r\n}\r\n\r\nexport const setControlsActionCreator = (value: boolean = false): ISetControls => {\r\n    return {\r\n        type: GlobalActionTypes.SET_CONTROLS,\r\n        payload: {\r\n            value\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ISetErr {\r\n    type: GlobalActionTypes.SET_ERR,\r\n    payload: {\r\n        err: boolean\r\n    }\r\n}\r\n\r\nexport const setErrActionCreator = (err: boolean = false): ISetErr => {\r\n    return {\r\n        type: GlobalActionTypes.SET_ERR,\r\n        payload: {\r\n            err\r\n        }\r\n    }\r\n}\r\n","import { globalInitialState, GlobalState } from \"../store/store\";\r\nimport { Action } from \"../actions\";\r\nimport { GlobalActionTypes } from \"../actions/globalActions\";\r\n\r\nexport const globalReducer = (state: GlobalState = globalInitialState, action: Action) => {\r\n    switch (action.type) {\r\n        case GlobalActionTypes.SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.payload.userId\r\n            }\r\n        case GlobalActionTypes.SET_CONTROLS:\r\n            if (state.lockControls !== action.payload.value) {\r\n                return {\r\n                    ...state,\r\n                    lockControls: action.payload.value\r\n                }\r\n            }\r\n            return state;\r\n        case GlobalActionTypes.SET_ERR: {\r\n            if (state.err !== action.payload.err) {\r\n                return {\r\n                    ...state,\r\n                    err: action.payload.err\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ICart } from \"../../../_models/cart\";\r\n\r\nexport enum CartActionTypes {\r\n    SET_CART = \"SET_CART\"\r\n}\r\n\r\nexport interface ISetCart { type: CartActionTypes.SET_CART, payload: { cart: ICart } };\r\n\r\nexport const setCartActionCreator = (cart: ICart) => {\r\n    return {\r\n        type: CartActionTypes.SET_CART,\r\n        payload: {\r\n            cart\r\n        }\r\n    }\r\n}","import uuid from \"uuid\";\r\n\r\nexport enum StorageVars {\r\n    USER_ID = \"USER_ID\"\r\n}\r\n\r\nexport const UTILS = {\r\n    generateUserId: () => {\r\n        return uuid.v4();\r\n    }\r\n}\r\n\r\nexport const setUserId = (userId: string) => {\r\n    localStorage.setItem(StorageVars.USER_ID, userId);\r\n}\r\n\r\nexport const getUserId = () => {\r\n    return localStorage.getItem(StorageVars.USER_ID);\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { itemReducer } from \"../reducers/itemReducer\";\r\nimport { globalReducer } from \"../reducers/globalReducer\";\r\nimport { cartReducer } from \"../reducers/cartReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { IItem } from \"../../../_models/item\";\r\nimport { ICart } from \"../../../_models/cart\";\r\n\r\n// Global store definitions\r\nexport interface ItemState {\r\n    items: IItem[]\r\n}\r\n\r\nexport interface CartState {\r\n    cart: ICart;\r\n}\r\n\r\nexport interface GlobalState {\r\n    userId: string;\r\n    lockControls: boolean;\r\n    err: boolean;\r\n}\r\n\r\nexport interface State {\r\n    itemReducer: ItemState;\r\n    globalReducer: GlobalState;\r\n    cartReducer: CartState;\r\n}\r\n\r\n// Initial states\r\nexport const itemInitialState: ItemState = {\r\n    items: []\r\n}\r\n\r\nexport const globalInitialState: GlobalState = {\r\n    userId: \"\",\r\n    lockControls: false,\r\n    err: false\r\n}\r\n\r\nexport const cartInitialState: CartState = {\r\n    cart: { userId: \"\", itemQuantities: [] }\r\n}\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nexport const store = createStore(\r\n    combineReducers({\r\n        itemReducer,\r\n        globalReducer,\r\n        cartReducer\r\n    }),\r\n    composeWithDevTools(\r\n        applyMiddleware(),\r\n    )\r\n);\r\n/* eslint-enable */","import { itemInitialState, ItemState } from \"../store/store\";\r\nimport { Action } from \"../actions\";\r\nimport { ItemActionTypes } from \"../actions/itemActions\";\r\n\r\nexport const itemReducer = (state: ItemState = itemInitialState, action: Action) => {\r\n    switch (action.type) {\r\n        case ItemActionTypes.SET:\r\n            return {\r\n                items: action.payload.items\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CartState, cartInitialState } from \"../store/store\";\r\nimport { Action } from \"../actions\";\r\nimport { CartActionTypes } from \"../actions/cartActions\";\r\n\r\nexport const cartReducer = (state: CartState = cartInitialState, action: Action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.SET_CART:\r\n            return {\r\n                cart: action.payload.cart\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const HOST_BASE_URL = \"http://localhost:8080\";\r\nconst CART_BASE_URL = `${HOST_BASE_URL}/carts`;\r\nconst ITEMS_BASE_URL = `${HOST_BASE_URL}/items`;\r\n\r\nexport const URLS = {\r\n    ITEM_LIST_URL: `${ITEMS_BASE_URL}/list`,\r\n    ITEM_ADD_URL: `${CART_BASE_URL}/add`,\r\n    ITEM_DELETE_URL: `${CART_BASE_URL}/delete`,\r\n    CART_GET_URL: `${CART_BASE_URL}/get`\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { URLS } from \"./apiConfig\";\r\nimport { ICart } from \"../../../_models/cart\";\r\nimport { IItem } from \"../../../_models/item\";\r\nimport { IItemListResponse } from \"../../../_responses/itemListResponse\";\r\n\r\nconst axiosConfig: AxiosRequestConfig = {\r\n    timeout: 30000\r\n}\r\n\r\n// FIXME It would be a great idea to validate the response object\r\n\r\nexport const itemApi = {\r\n    fetchItems: async (): Promise<IItemListResponse> => {\r\n        const response = await Axios.get(URLS.ITEM_LIST_URL, axiosConfig);\r\n\r\n        return response.data as IItemListResponse;\r\n    }\r\n}\r\n\r\nexport const cartApi = {\r\n    addToCart: async (userId: string, item: IItem) => {\r\n        const response = await Axios.post(URLS.ITEM_ADD_URL, {\r\n            userId,\r\n            item\r\n        }, axiosConfig);\r\n\r\n        return response.data;\r\n    },\r\n    removeFromCart: async (userId: string, item: IItem) => {\r\n        const response = await Axios.post(URLS.ITEM_DELETE_URL, {\r\n            userId,\r\n            itemName: item.itemName\r\n        }, axiosConfig)\r\n\r\n        return response.data;\r\n    },\r\n    getCart: async (userId: string): Promise<ICart> => {\r\n        const response = await Axios.post(URLS.CART_GET_URL, {\r\n            userId\r\n        }, axiosConfig);\r\n\r\n        return response.data as ICart;\r\n    }\r\n}","import { store } from \"../store/store\";\r\nimport { itemApi, cartApi } from \"../api/api\";\r\nimport { setItemsActionCreator } from \"../actions/itemActions\";\r\nimport { getUserId, UTILS, setUserId } from \"../util/localStorage\";\r\nimport { setUserIdActionCreator, setControlsActionCreator, setErrActionCreator } from \"../actions/globalActions\";\r\nimport { IItem } from \"../../../_models/item\";\r\nimport { setCartActionCreator } from \"../actions/cartActions\";\r\nimport { ICart } from \"../../../_models/cart\";\r\n\r\n/**\r\n * FIXME: A good place of Redux Thunk?\r\n * Holds actions that many componets may need, like loading some resource.\r\n */\r\nconst stateActions = {\r\n    loadItems: async (): Promise<void> => {\r\n        try {\r\n            store.dispatch(setControlsActionCreator(true));\r\n            const listResponse: any = await itemApi.fetchItems();\r\n            store.dispatch(setItemsActionCreator(listResponse.items));\r\n            store.dispatch(setErrActionCreator());\r\n        } catch (e) {\r\n            store.dispatch(setErrActionCreator(true));\r\n        } finally {\r\n            store.dispatch(setControlsActionCreator());\r\n        }\r\n\r\n    },\r\n    handleSessionSetup: (): void => {\r\n        let userId = getUserId();\r\n        if (!userId) {\r\n            userId = UTILS.generateUserId();\r\n            setUserId(userId);\r\n        }\r\n\r\n        store.dispatch(setUserIdActionCreator(userId));\r\n    },\r\n    getCart: async (userId: string): Promise<void> => {\r\n        try {\r\n            store.dispatch(setControlsActionCreator(true));\r\n            const cart = await cartApi.getCart(userId) as ICart;\r\n            if (cart) {\r\n                store.dispatch(setCartActionCreator(cart));\r\n            }\r\n            store.dispatch(setErrActionCreator());\r\n        } catch (e) {\r\n            store.dispatch(setErrActionCreator(true));\r\n        } finally {\r\n            store.dispatch(setControlsActionCreator());\r\n        }\r\n\r\n    },\r\n    addItemToCart: async (userId: string, item: IItem): Promise<void> => {\r\n        try {\r\n            store.dispatch(setControlsActionCreator(true));\r\n            await cartApi.addToCart(userId, item);\r\n            store.dispatch(setErrActionCreator());\r\n        } catch (e) {\r\n            store.dispatch(setErrActionCreator(true));\r\n        } finally {\r\n            store.dispatch(setControlsActionCreator());\r\n        }\r\n    },\r\n    removeItemFromCaer: async (userId: string, item: IItem): Promise<void> => {\r\n        try {\r\n            store.dispatch(setControlsActionCreator(true));\r\n            await cartApi.removeFromCart(userId, item);\r\n            store.dispatch(setErrActionCreator());\r\n        } catch (e) {\r\n            store.dispatch(setErrActionCreator(true));\r\n        } finally {\r\n            store.dispatch(setControlsActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport { stateActions };","import React, { useEffect } from \"react\";\r\nimport { Container, Card, CardContent, CardActions, Button, Typography, Grid, Theme, CardHeader } from \"@material-ui/core\";\r\nimport { State } from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { isItemsLoaded, isItemInCart } from \"../../selectors/itemSelectors\";\r\nimport { IItem } from \"../../../../_models/item\";\r\nimport { stateActions } from \"../../stateActions/stateActions\";\r\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { ICart } from \"../../../../_models/cart\";\r\nimport { history } from \"../../util/history\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            width: 200\r\n        },\r\n        container: {\r\n            marginTop: 10\r\n        }\r\n    })\r\n);\r\n\r\ninterface ItemListProps {\r\n    isItemsLoaded: boolean;\r\n    items: IItem[];\r\n    userId: string;\r\n    cart: ICart;\r\n    lockControls: boolean;\r\n}\r\n\r\nconst ItemList: React.FC<ItemListProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    // Fetch all items on mount once\r\n    useEffect(() => {\r\n        (async () => {\r\n            await stateActions.loadItems();\r\n        })();\r\n    }, []);\r\n\r\n    // Add item to cart, after wich fetch the updated cart\r\n    const addToCart = async (item: IItem) => {\r\n        await stateActions.addItemToCart(props.userId, item);\r\n        await stateActions.getCart(props.userId);\r\n    }\r\n\r\n    const toCart = () => {\r\n        history.push(\"/cart\");\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container spacing={2} justify=\"space-evenly\">\r\n                {props.isItemsLoaded && props.items.map((item: IItem, index: number) => {\r\n                    const isInCart = isItemInCart(item, props.cart);\r\n\r\n                    return (\r\n                        <Grid item key={index}>\r\n                            <Card className={classes.card}>\r\n                                <CardHeader title={item.itemName}>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <Typography color=\"secondary\">\r\n                                        {`${item.price} $`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button disabled={props.lockControls} variant=\"contained\" color={isInCart ? \"primary\" : \"secondary\"} fullWidth onClick={() => { isInCart ? toCart() : addToCart(item) }}>\r\n                                        {isInCart ? \"To Cart\" : \"Buy\"}\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        items: state.itemReducer.items,\r\n        isItemsLoaded: isItemsLoaded(state),\r\n        userId: state.globalReducer.userId,\r\n        cart: state.cartReducer.cart,\r\n        lockControls: state.globalReducer.lockControls\r\n    }\r\n}\r\n\r\nconst ConnectedItemList = connect(mapStateToProps)(ItemList);\r\n\r\nexport { ConnectedItemList as ItemList }","import React from \"react\";\r\nimport { Grid, Card, CardContent, Divider, Typography, CardHeader, Button, Theme, Box } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../../store/store\";\r\nimport { isCartEmpty } from \"../../selectors/cartSelectors\";\r\nimport { ICart, ICartItemQuantity } from \"../../../../_models/cart\";\r\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { stateActions } from \"../../stateActions/stateActions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        gridItem: {\r\n            width: \"50%\"\r\n        },\r\n        cardHeader: {\r\n            padding: 5,\r\n            marginLeft: 20\r\n        },\r\n        cardContent: {\r\n            padding: 0,\r\n            margin: 20,\r\n            \"&:last-child\": {\r\n                padding: 0\r\n            }\r\n        },\r\n        cardTexts: {\r\n            width: 200\r\n        },\r\n        cardActions: {\r\n\r\n        },\r\n        cardButton: {\r\n            margin: 5\r\n        },\r\n        itemGrid: {\r\n            margin: 0,\r\n            width: \"100%\"\r\n        },\r\n        countField: {\r\n            width: 30\r\n        },\r\n        emptyItem: {\r\n            paddingBottom: 15,\r\n            paddingTop: 15\r\n        },\r\n        priceGrid: {\r\n            padding: 10\r\n        }\r\n    })\r\n);\r\n\r\ninterface CartProps {\r\n    cart: ICart;\r\n    isCartEmpty: boolean;\r\n    userId: string;\r\n    lockControls: boolean;\r\n}\r\n\r\nconst Cart: React.FC<CartProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {props.isCartEmpty &&\r\n                <Grid item className={classes.emptyItem}>\r\n                    <Typography variant=\"h4\">\r\n                        Nothing here.\r\n                    </Typography>\r\n                </Grid>\r\n            }\r\n            <Grid id=\"itemGrid\" container spacing={3} className={classes.itemGrid}>\r\n                {!props.isCartEmpty && props.cart.itemQuantities.map((itemQuantity: ICartItemQuantity, index: number) => {\r\n                    return (\r\n                        <Grid item key={index} className={classes.gridItem}>\r\n                            <Card>\r\n                                <CardHeader title={itemQuantity.item.itemName} className={classes.cardHeader} />\r\n                                <Divider />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                                        <Grid item className={classes.cardTexts}>\r\n                                            <Typography variant=\"h5\">\r\n                                                {`${itemQuantity.item.price}$ - ${itemQuantity.quantity} pcs`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item className={classes.cardActions}>\r\n                                            <Button className={classes.cardButton} disabled={props.lockControls} variant=\"outlined\" color=\"primary\" onClick={async () => {\r\n                                                await stateActions.addItemToCart(props.userId, itemQuantity.item);\r\n                                                await stateActions.getCart(props.userId);\r\n                                            }}>Add</Button>\r\n                                            <Button className={classes.cardButton} disabled={props.lockControls} variant=\"outlined\" color=\"secondary\" onClick={async () => {\r\n                                                await stateActions.removeItemFromCaer(props.userId, itemQuantity.item);\r\n                                                await stateActions.getCart(props.userId);\r\n                                            }}>Remove</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n            <Divider />\r\n            <Grid container alignItems=\"flex-end\" justify=\"center\" className={classes.priceGrid}>\r\n                <Grid item>\r\n                    <Box fontWeight={600}>\r\n                        {`Total: ${props.cart.totalPrice || \"0.00\"}$`}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        cart: state.cartReducer.cart,\r\n        isCartEmpty: isCartEmpty(state),\r\n        userId: state.globalReducer.userId,\r\n        lockControls: state.globalReducer.lockControls\r\n    }\r\n}\r\n\r\nconst ConnectedCart = connect(mapStateToProps)(Cart);\r\n\r\nexport { ConnectedCart as Cart }","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        overlay: {\r\n            position: \"fixed\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: `rgba(0, 0, 0, 0.2)`,\r\n            zIndex: 1000\r\n        }\r\n    })\r\n)\r\n\r\nconst Progress: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return <div className={classes.overlay}>\r\n        <CircularProgress />\r\n    </div>\r\n}\r\n\r\nexport {\r\n    Progress\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography, makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.error.light,\r\n            textAlign: \"center\"\r\n        }\r\n    })\r\n);\r\n\r\nexport const ErrorInfo: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container alignContent=\"center\" justify=\"center\">\r\n            <Grid item className={classes.container}>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    We are experiancing some technical problems. Please try again later.\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport { Footer } from './components/footer/footer';\nimport { Header } from './components/header/header';\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { Container } from '@material-ui/core';\nimport { Router, Route } from 'react-router-dom';\nimport { history } from './util/history';\nimport { ItemList } from './components/itemList/itemList';\nimport { stateActions } from './stateActions/stateActions';\nimport { connect } from 'react-redux';\nimport { State } from './store/store';\nimport { isCartLoaded } from './selectors/cartSelectors';\nimport { Cart } from './components/cart/cart';\nimport { Progress } from './components/progress/progress';\nimport { ErrorInfo } from './components/errorInfo/errorInfo';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            width: \"100%\",\n            flexGrow: 1,\n            padding: 0,\n            margin: 0\n        },\n        container: {\n            flexGrow: 1,\n            padding: 5\n        }\n    })\n);\n\ninterface RootProps {\n    userId: string;\n    isCartLoaded: boolean;\n    lockControls: boolean;\n    err: boolean;\n}\n\nconst Root: React.FC<RootProps> = (props) => {\n    const [cartLoadLock, setCartLoadLock] = useState(false);\n\n    const classes = useStyles();\n\n    // Get a user id\n    useEffect(() => {\n        stateActions.handleSessionSetup();\n\n    }, [])\n\n    // Load the users cart only when we have a user and no cart\n    useEffect(() => {\n        if (props.userId && !props.isCartLoaded && !cartLoadLock) {\n            setCartLoadLock(true);\n            stateActions.getCart(props.userId);\n        }\n    }, [props.userId, props.isCartLoaded, cartLoadLock]);\n\n    return (\n        <Container id=\"rootContainer\" className={classes.root} maxWidth={false}>\n            {props.lockControls && <Progress />}\n            <Router history={history}>\n                <Header />\n                <Container id=\"content\" className={classes.container}>\n                    {props.err && <ErrorInfo />}\n                    <Route path=\"/\" exact component={ItemList} />\n                    <Route path=\"/cart\" component={Cart} />\n                </Container>\n                <Footer />\n            </Router>\n        </Container >\n    );\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        userId: state.globalReducer.userId,\n        isCartLoaded: isCartLoaded(state),\n        lockControls: state.globalReducer.lockControls,\n        err: state.globalReducer.err\n    }\n}\n\nconst ConnectedRoot = connect(mapStateToProps)(Root)\n\nexport default ConnectedRoot;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ConnectedRoot from './root';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\"\nimport { store } from './store/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRoot />\n    </Provider>,\n    document.getElementById('main'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}